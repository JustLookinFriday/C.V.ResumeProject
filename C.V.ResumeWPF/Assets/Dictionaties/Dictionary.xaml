<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--Шрифт-->
    
    <FontFamily x:Key="QRegular">pack://application:,,,/Assets\Fonts\quattrocento-regular.ttf#Quattrocento</FontFamily>
    
    <!--/разделительразделительразделительразделительразделительразделительразделительразделительразделительразделитель\-->

    <!--Цвета-->
    
    <SolidColorBrush x:Key="Color70" Color="#000000" Opacity="0.7"/>
    
    <!--1-->
    
    <SolidColorBrush x:Key="Color50" Color="#000000" Opacity="0.5"/>
    
    <!--2-->
    
    <SolidColorBrush x:Key="ColorSecondary75" Color="#c4c4c4" Opacity="0.75"/>
    
    <!--3-->
    
    <SolidColorBrush x:Key="ColorSecondary50" Color="#c4c4c4" Opacity="0.5"/>
    
    <!--4-->

    <SolidColorBrush x:Key="ColorSecondary40" Color="#c4c4c4" Opacity="0.4"/>
    
    <!--5-->

    <SolidColorBrush x:Key="ColorSecondary30" Color="#c4c4c4" Opacity="0.3"/>
    
    <!--6-->

    <SolidColorBrush x:Key="ColorSecondary25" Color="#c4c4c4" Opacity="0.25"/>
    
    <!--7-->
    
    <SolidColorBrush x:Key="ColorSecondary20" Color="#c4c4c4" Opacity="0.2"/>
    
    <!--8-->
    
    <SolidColorBrush x:Key="ColorSecondary10" Color="#c4c4c4" Opacity="0.1"/>

    <!--/разделительразделительразделительразделительразделительразделительразделительразделительразделительразделитель\-->

    <!--Grids-->

    <Style x:Key="G_Alignment" TargetType="Grid">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    
    <!--1-->

    <Style x:Key="AddInfo" TargetType="Grid">
        <Setter Property="Visibility" Value="Collapsed"/>
    </Style>
    
    <!--/разделительразделительразделительразделительразделительразделительразделительразделительразделительразделитель\-->
    
    <!--StackPanels-->
    
    <Style x:Key="SP_Alignment" TargetType="StackPanel">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!--/разделительразделительразделительразделительразделительразделительразделительразделительразделительразделитель\-->

    <!--Rectangle-->
    <Style x:Key="DiamondArrow" TargetType="Rectangle">
        <Setter Property="Width" Value="4.5"/>
        <Setter Property="Height" Value="4.5"/>
        <Setter Property="Fill" Value="Black"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <RotateTransform Angle="45"/>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--1-->

    <Style x:Key="Menu" TargetType="Rectangle">
        <Setter Property="Fill" Value="#c4c4c4"/>
        <Setter Property="Stroke" Value="#000000"/>
        <Setter Property="StrokeThickness" Value="0.5"/>
        <Setter Property="ToolTip">
            <Setter.Value>
                <TextBlock FontFamily="{StaticResource QRegular}">
                    Это меню не работает,
                    <LineBreak/>
                    так что не наводи сюда курсор!
                </TextBlock>
            </Setter.Value>
        </Setter>
    </Style>

    <!--/разделительразделительразделительразделительразделительразделительразделительразделительразделительразделитель\-->
    
    <!--TextBlocks-->
    
    <Style x:Key="OpenningText_1" TargetType="TextBlock">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="FontSize" Value="32"/>
        <Setter Property="ToolTip">
            <Setter.Value>
                <TextBlock Text="Привет!" FontFamily="{StaticResource QRegular}"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="TextBlock.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" Duration="0:0:2.5" AutoReverse="True" RepeatBehavior="Forever"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    
    <!--1-->
    
    <Style x:Key="OpenningText_2" TargetType="TextBlock">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="FontSize" Value="32"/>
        <Setter Property="ToolTip">
            <Setter.Value>
                <TextBlock FontFamily="{StaticResource QRegular}">
                    На данный момент, как человеку,
                    <LineBreak/>
                    запустившему эту программу,
                    <LineBreak />
                    вам очень повезло!
                </TextBlock>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="TextBlock.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" BeginTime="0:0:0.1" Duration="0:0:2.5" AutoReverse="True" RepeatBehavior="Forever"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    
    <!--2-->
    
    <Style x:Key="OpenningText_3" TargetType="TextBlock">
        <Setter Property="Padding" Value="5"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="FontSize" Value="32"/>
        <Setter Property="ToolTip">
            <Setter.Value>
                <TextBlock FontFamily="{StaticResource QRegular}">
                    С этого времени вы решили,
                    <LineBreak/>
                    что вам нужно составить свое личное резюме на новую должность.
                </TextBlock>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="TextBlock.Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" BeginTime="0:0:0.15" Duration="0:0:2.5" AutoReverse="True" RepeatBehavior="Forever"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    
    <!--3-->
    
    <Style x:Key="ExampleTextBlock" TargetType="TextBlock">
        <Setter Property="TextDecorations" Value="Strikethrough"/>
        <Setter Property="FontFamily" Value="{StaticResource QRegular}"/>
        <Setter Property="FontSize" Value="48"/>
        <Setter Property="ToolTip">
            <Setter.Value>
                <TextBlock Text="БЛОК ПРИМЕРА"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Direction="270" BlurRadius="4" Opacity="0.35"/>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--4-->

    <Style x:Key="AddSkillsTextBlock" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource QRegular}"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0 26 0 0"/>
    </Style>

   
    <!--/разделительразделительразделительразделительразделительразделительразделительразделительразделительразделитель\-->
    
    <!--TextBoxs-->
    
    <Style x:Key="RequiredTBox_292" TargetType="TextBox">
        <Setter Property="FontFamily" Value="{StaticResource QRegular}"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="SelectionBrush" Value="White"/>
        <Setter Property="Background" Value="#c4c4c4"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="Width" Value="292"/>
        <Setter Property="Margin" Value="0 26 0 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" Margin="26 24 0 0"/>
                            <Label x:Name="WaterMarkLabel" Content="{TemplateBinding Tag}" Padding="51 8 0 0" Foreground="#000000" FontFamily="{StaticResource QRegular}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ContentHost" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="WaterMarkLabel" Property="FontSize" Value="20"/>
                            <Setter TargetName="WaterMarkLabel" Property="Padding" Value="51 12 0 0"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource Color50}"/>
                            <Setter TargetName="WaterMarkLabel" Property="Foreground" Value="White"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--1-->

    <Style x:Key="RequiredTBox_505" TargetType="TextBox">
        <Setter Property="FontFamily" Value="{StaticResource QRegular}"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="SelectionBrush" Value="White"/>
        <Setter Property="Background" Value="#c4c4c4"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="Width" Value="505"/>
        <Setter Property="Margin" Value="0 26 0 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" Margin="26 27 0 0"/>
                            <Label x:Name="WaterMarkLabel" Content="{TemplateBinding Tag}" Padding="51 8 0 0" Foreground="#000000" FontFamily="{StaticResource QRegular}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ContentHost" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="WaterMarkLabel" Property="FontSize" Value="20"/>
                            <Setter TargetName="WaterMarkLabel" Property="Padding" Value="51 12 0 0"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource Color50}"/>
                            <Setter TargetName="WaterMarkLabel" Property="Foreground" Value="White"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--2-->

    <Style x:Key="Not_NecessaryTBox_292" TargetType="TextBox">
        <Setter Property="FontFamily" Value="{StaticResource QRegular}"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="SelectionBrush" Value="Gray"/>
        <Setter Property="Background" Value="{StaticResource ColorSecondary50}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="Width" Value="292"/>
        <Setter Property="Margin" Value="0 26 0 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" Margin="26 27 0 0"/>
                            <Label x:Name="WaterMarkLabel" Content="{TemplateBinding Tag}" Padding="51 8 0 0" Foreground="#000000" FontFamily="{StaticResource QRegular}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ContentHost" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="WaterMarkLabel" Property="FontSize" Value="20"/>
                            <Setter TargetName="WaterMarkLabel" Property="Padding" Value="51 12 0 0"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--3-->

    <Style x:Key="Not_NecessaryTBox_277_134" TargetType="TextBox">
        <Setter Property="FontFamily" Value="{StaticResource QRegular}"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="SelectionBrush" Value="Gray"/>
        <Setter Property="Background" Value="{StaticResource ColorSecondary50}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="134"/>
        <Setter Property="Width" Value="277"/>
        <Setter Property="Margin" Value="0 26 0 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" Margin="26 26 5 0" Height="auto"/>
                            <Separator x:Name="TextLine" Height="0.5" Margin="0 0 0 84"/>
                            <Label x:Name="WaterMarkLabel" Content="{TemplateBinding Tag}" Padding="51 8 0 0" Foreground="#000000" FontFamily="{StaticResource QRegular}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="TextLine" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="PART_ContentHost" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="WaterMarkLabel" Property="FontSize" Value="20"/>
                            <Setter TargetName="WaterMarkLabel" Property="Padding" Value="51 12 0 0"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--4-->

    <Style x:Key="Not_NecessaryTBox_505" TargetType="TextBox">
        <Setter Property="FontFamily" Value="{StaticResource QRegular}"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="SelectionBrush" Value="Gray"/>
        <Setter Property="Background" Value="{StaticResource ColorSecondary50}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="Width" Value="505"/>
        <Setter Property="Margin" Value="0 26 0 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" Margin="26 27 0 0"/>
                            <Label x:Name="WaterMarkLabel" Content="{TemplateBinding Tag}" Padding="51 8 0 0" Foreground="#000000" FontFamily="{StaticResource QRegular}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ContentHost" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="WaterMarkLabel" Property="FontSize" Value="20"/>
                            <Setter TargetName="WaterMarkLabel" Property="Padding" Value="51 12 0 0"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--5-->

    <Style x:Key="Not_NecessaryTBox_505_88" TargetType="TextBox">
        <Setter Property="FontFamily" Value="{StaticResource QRegular}"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="SelectionBrush" Value="Gray"/>
        <Setter Property="Background" Value="{StaticResource ColorSecondary50}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="88"/>
        <Setter Property="Width" Value="505"/>
        <Setter Property="Margin" Value="0 26 0 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" Margin="26 26 10 0"  Height="auto"/>
                            <Separator x:Name="TextLine" Height="0.5" Margin="0 0 0 38"/>
                            <Label x:Name="WaterMarkLabel" Content="{TemplateBinding Tag}" Padding="51 8 0 0" Foreground="#000000" FontFamily="{StaticResource QRegular}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="TextLine" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="PART_ContentHost" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="WaterMarkLabel" Property="FontSize" Value="20"/>
                            <Setter TargetName="WaterMarkLabel" Property="Padding" Value="51 12 0 0"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--6-->

    <Style x:Key="AddIDTBox" TargetType="TextBox">
        <Setter Property="FontFamily" Value="{StaticResource QRegular}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="SelectionBrush" Value="White"/>
        <Setter Property="Background" Value="#c4c4c4"/>
        <Setter Property="Margin" Value="5 0 5 0"/>
        <Setter Property="Height" Value="27.5"/>
        <Setter Property="Width" Value="27.5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}">
                        <ScrollViewer x:Name="PART_ContentHost" HorizontalAlignment="Center" VerticalAlignment="Center"  Height="auto"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource Color50}"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--/разделительразделительразделительразделительразделительразделительразделительразделительразделительразделитель\-->

    <!--ComboBoxs-->

    <Style x:Key="CustomCBox" TargetType="ComboBox">
        <Setter Property="FontFamily" Value="{StaticResource QRegular}"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="Width" Value="292"/>
        <Setter Property="Margin" Value="0 26 0 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="40"/>
                        </Grid.ColumnDefinitions>
                        <ToggleButton x:Name="Border" Grid.ColumnSpan="2" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Border x:Name="BorderToggleButton" Background="{StaticResource ColorSecondary50}">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="BorderToggleButton" Property="Background" Value="{StaticResource Color50}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                        <Border Grid.Column="0" Margin="5" Background="{StaticResource ColorSecondary75}">
                            <Grid>
                                <Label x:Name="PART_EditableLabel" Content="{TemplateBinding Tag}" Focusable="True" Foreground="{StaticResource Color50}"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        <Path x:Name="Arrow" Grid.Column="1" Fill="Black" Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z" VerticalAlignment="Center" Margin="13 0 0 0"/>
                        <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" PopupAnimation="Slide">
                            <Grid x:Name="DropDown">
                                <Border x:Name="DropDownBorder" Background="White" BorderThickness="2" BorderBrush="Gray"/>
                                <ScrollViewer VerticalScrollBarVisibility="Hidden">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Margin="5" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Arrow" Property="Fill" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                    <ControlTemplate.Resources>
                        <Style TargetType="ComboBoxItem">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ComboBoxItem">
                                        <Border x:Name="BorderItem" Background="{StaticResource ColorSecondary75}" Margin="1.5" Padding="1.5">
                                            <ContentPresenter HorizontalAlignment="Left"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter TargetName="BorderItem" Property="BorderThickness" Value="0.5"/>
                                                <Setter TargetName="BorderItem" Property="BorderBrush" Value="Black"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--/разделительразделительразделительразделительразделительразделительразделительразделительразделительразделитель\-->

    <!--CheckBoxs-->

    <Style x:Key="CustomChBox" TargetType="CheckBox">
        <Setter Property="FontFamily" Value="{StaticResource QRegular}"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0 26 0 0 "/>      
        <Setter Property="Width" Value="292"/>
        <Setter Property="Height" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="15"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="0" Background="{StaticResource ColorSecondary75}" Height="14" Width="14" BorderThickness="0" ClickMode="Press">
                            <Image x:Name="CheckBoxImage" Source="../../Assets/Images/CommonCheckArrow.png" Width="8"/>
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Border x:Name="BorderButton" Background="{StaticResource ColorSecondary75}">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="BorderButton" Property="Background" Value="{StaticResource Color50}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>
                        <ContentPresenter Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckBoxImage" Property="Source" Value="../../Assets/Images/BTrueCheckArrow.png"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CheckBoxImage" Property="Source" Value="../../Assets/Images/WTrueCheckArrow.png"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckBoxImage" Property="Source" Value="../../Assets/Images/BFalseCheckArrow.png"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--1-->

    <Style x:Key="CustomChBoxFirst" TargetType="CheckBox">
        <Setter Property="FontFamily" Value="{StaticResource QRegular}"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0 26 0 0 "/>
        <Setter Property="Width" Value="277"/>
        <Setter Property="Height" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="15"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="0" Background="{StaticResource ColorSecondary75}" Height="14" Width="14" BorderThickness="0" ClickMode="Press">
                            <Image x:Name="CheckBoxImage" Source="../../Assets/Images/CommonCheckArrow.png" Width="8"/>
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Border x:Name="BorderButton" Background="{StaticResource ColorSecondary75}">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="BorderButton" Property="Background" Value="{StaticResource Color50}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>
                        <ContentPresenter Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckBoxImage" Property="Source" Value="../../Assets/Images/BTrueCheckArrow.png"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CheckBoxImage" Property="Source" Value="../../Assets/Images/WTrueCheckArrow.png"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckBoxImage" Property="Source" Value="../../Assets/Images/BFalseCheckArrow.png"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--2-->

    <Style x:Key="CustomChBoxSecond" TargetType="CheckBox">
        <Setter Property="FontFamily" Value="{StaticResource QRegular}"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FlowDirection" Value="RightToLeft"/>
        <Setter Property="Margin" Value="0 26 0 0 "/>
        <Setter Property="Width" Value="277"/>
        <Setter Property="Height" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="15"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Button Grid.Column="0" Background="{StaticResource ColorSecondary75}" Height="14" Width="14" BorderThickness="0" ClickMode="Press">
                            <Image x:Name="CheckBoxImage" Source="../../Assets/Images/CommonCheckArrow.png" Width="8"/>
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Border x:Name="BorderButton" Background="{StaticResource ColorSecondary75}">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="BorderButton" Property="Background" Value="{StaticResource Color50}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>
                        <ContentPresenter Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckBoxImage" Property="Source" Value="../../Assets/Images/BTrueCheckArrow.png"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="CheckBoxImage" Property="Source" Value="../../Assets/Images/WTrueCheckArrow.png"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CheckBoxImage" Property="Source" Value="../../Assets/Images/BFalseCheckArrow.png"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="Path">
                <Setter Property="FlowDirection" Value="LeftToRight" />
            </Style>
        </Style.Resources>
    </Style>

    <!--/разделительразделительразделительразделительразделительразделительразделительразделительразделительразделитель\-->
    
    <!--DatePickers-->

    <Style x:Key="CustomDPicker" TargetType="DatePicker">
        <Setter Property="FontFamily" Value="{StaticResource QRegular}"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0 26 0 0"/>
        <Setter Property="Width" Value="292"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DatePicker">
                    <Grid x:Name="PART_Root">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="45"/>
                        </Grid.ColumnDefinitions>
                        <Button Grid.ColumnSpan="2" x:Name="PART_Button" ClickMode="Press">
                            <Button.Style>
                                <Style  TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Border x:Name="BorderButton" Background="{StaticResource ColorSecondary50}">
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="BorderButton" Property="Background" Value="{StaticResource Color50}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Border Grid.Column="0" Margin="5" Background="{StaticResource ColorSecondary75}">
                            <Grid>
                                <Label x:Name="PART_EditableLabel" Content="{TemplateBinding Tag}" Focusable="True" Foreground="{StaticResource Color50}"/>
                            </Grid>
                        </Border>
                        <DatePickerTextBox Grid.Column="0" x:Name="PART_TextBox" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Visibility="Visible">
                            <DatePickerTextBox.Style>
                                <Style x:Name="DatePicker_TBox" TargetType="DatePickerTextBox">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <Setter Property="IsEnabled" Value="True"/>
                                    <Setter Property="IsReadOnly" Value="True"/>
                                </Style>
                            </DatePickerTextBox.Style>
                        </DatePickerTextBox>
                        <Image Grid.Column="1" x:Name="ChangeImage" Source="../../Assets/Images/BCalendar.png" Width="18" Height="28"/>
                        <Popup x:Name="PART_Popup" StaysOpen="False" AllowsTransparency="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_Button" Property="Background" Value="{StaticResource Color50}"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter TargetName="ChangeImage" Property="Source" Value="../../Assets/Images/WCalendar.png"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--/разделительразделительразделительразделительразделительразделительразделительразделительразделительразделитель\-->

    <!--Buttons-->

    <Style x:Key="OpenningButton" TargetType="Button">
        <Setter Property="FontFamily" Value="{StaticResource QRegular}"/>
        <Setter Property="FontSize" Value="32"/>
        <Setter Property="Width" Value="250"/>
        <Setter Property="Height" Value="75"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="ToolTip">
            <Setter.Value>
                <TextBlock Text="Вперёд!" FontFamily="{StaticResource QRegular}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Color50}"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--1-->
    
    <Style x:Key="SelectionButton" TargetType="Button">
        <Setter Property="FontFamily" Value="{StaticResource QRegular}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="ToolTip">
            <Setter.Value>
                <TextBlock Text="Переключай!" FontFamily="{StaticResource QRegular}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="FontSize" To="20" Duration="0:0:0.1" AutoReverse="True"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ColorSecondary10}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--2-->
    
    <Style x:Key="SwitchButton" TargetType="Button">
        <Setter Property="FontFamily" Value="{StaticResource QRegular}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Width" Value="45"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ColorSecondary10}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--3-->

    <Style x:Key="TutorialButton" TargetType="Button">
        <Setter Property="FontFamily" Value="{StaticResource QRegular}"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="ToolTip">
            <Setter.Value>
                <TextBlock Text="Начнём?" FontFamily="{StaticResource QRegular}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Color50}"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--4-->

    <Style x:Key="AddIDButton" TargetType="Button">
        <Setter Property="FontFamily" Value="{StaticResource QRegular}"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Height" Value="27.5"/>
        <Setter Property="Width" Value="27.5"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Color50}"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--5-->

    <Style x:Key="HiddenButton" TargetType="Button">
        <Setter Property="FontFamily" Value="{StaticResource QRegular}"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="Margin" Value="0 26 15 170"/>
        <Setter Property="Height" Value="13"/>
        <Setter Property="Width" Value="13"/>
        <Setter Property="ToolTip">
            <Setter.Value>
                <TextBlock Text="Скрыть блок?" FontFamily="{StaticResource QRegular}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ColorSecondary75}"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--6-->

    <Style x:Key="PicButton" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="PicBorder" Width="186" Height="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" Background="{TemplateBinding Background}" BorderThickness="5" BorderBrush="White"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PicBorder" Property="BorderBrush" Value="{StaticResource Color50}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--7-->

    <Style x:Key="SpecialButton" TargetType="Button">
        <Setter Property="FontFamily" Value="{StaticResource QRegular}"/>
        <Setter Property="FontSize" Value="8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="{StaticResource Color70}" >
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Color50}"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--8-->

    <Style x:Key="BaseButtons" TargetType="Button">
        <Setter Property="FontFamily" Value="{StaticResource QRegular}"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Visibility" Value="Hidden"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Color50}"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--9-->

    <Style x:Key="ExpandButton" TargetType="Button">
        <Setter Property="FontFamily" Value="{StaticResource QRegular}"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Margin" Value="69 26 69 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource Color50}"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--/разделительразделительразделительразделительразделительразделительразделительразделительразделительразделитель\-->

    <!--Images-->
    <Style x:Key="OpenImage" TargetType="Image">
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Direction="270" BlurRadius="4" Opacity="0.35"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Width" To="120" Duration="0:0:0.3" AutoReverse="True"/>
                            <DoubleAnimation Storyboard.TargetProperty="Height" To="155" Duration="0:0:0.3" AutoReverse="True"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>